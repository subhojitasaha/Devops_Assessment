Assignment

NOTE: Do not forget to see manual page using "--help" option in command when searching for options/commands for a particular task.

1. Install Docker, either on your native OS or on a VM. Make sure it runs. Type "docker -v" to check if it's installed.

If you can't install or configure Docker, you can use the online docker setup to do the assignment.
Step1 Goto:- https://www.katacoda.com/courses/kubernetes/playground
Step2 Click on "continue" button on the left panel
Step3 Click on "launch.sh" button on the left panel
Step4 From the right panel use the top console to execute below command:-
		docker -v


Try below commands for help
	docker --help  ---> This command shows all available options and commands to work with images and containers
	docker image --help ---> This command shows all the avaialble options and commands to work with docker images
	docker container --help ---> This command shows all the avaialble options and commands to work with docker containers

NOTE:- DO NOT TRY TO USE INTERNET TO SOLVE ASSIGNMENT, BETTER USE THE ABOVE --help OPTION TO SEE THE MANUAL OF ANY PARTICULAR COMMAND AND FIGURE OUT THE SOLUTIONS ON YOUR OWN.

2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
Ans- docker pull nginx
3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
Ans- docker image ls
4. Find out the "Full" ImageId of the image that you pulled and write it below.
Ans- 0901fa9da894
5. Create a container of your image 
Ans- docker run --name MyContainer1 -it nginx
6. List all the running containers
Ans- docker ps
7. List all the running and stopped containers
Ans- docker ps --filter "status=exited"
8. Find out the "Full" containerId of the container and write it below.
Ans- docker ps -aqf "name=MyContainer1" --> 5468701af41d
9. Find out how many image layers are used to build this image.
Ans- docker history nginx
10. Get the Apache Tomcat 7 server image from the docker hub.
Ans- docker pull tomcat:7.0
11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
Ans-  docker run --name MyContainer2 -it tomcat:7.0
12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
Ans- docker inspect d87a01333f8e | grep '"IPAddress"' | head -n 1
13. Which Port it is using?
Ans- docker ps -a 
14. Try to access the Tomcat's home page from your machine/vm.
Ans- Yes
15. What is the disk size of Apache Tomcat image?
Ans- docker ps -s 
16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
17. Find out which port is exposed for tomcat?
18. Run multiple conntainers of tomcat on different port and access it's home page.
19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
20. Run the container of ubuntu in attached mode.
21. Run the container of another ubuntu in detached mode.
Ans- docker container run -d ubuntu
22. Check how many ubuntu containers are running and stopped
Ans- docker ps --filter ancestor=ubuntu
23. Is the tomcat container running? If no, start one.
Ans- docker run --name MyContainer2 -it tomcat:7.0
24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
Ans- docker log MyContainer2
25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
Ans- docker --attach start my_container
26. Login as root user in ubuntu container
Ans- docker exec -u 0 -it my_container /bin/bash
27. Create a file with any name in root directory
28. Install software of your choice in ubuntu container using "apt-get install"
Ans- docker run ubuntu bash -c "apt-get -y install nginx"
29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
Ans- 
30. Check if the ubuntu container is running.
Ans- docker ps -a
31. Create a new ubuntu container out of the same image as that previous container in attached mode.
Ans - docker run --name MyContainer3 -it ubuntu
32. Login as a root user
Ans- 
33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.
Ans- docker kill 34ea8c201960
34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.
35. Create an Image out of the existing container.
Ans- docker run -it ubuntu:14.04 /bin/bash
36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
Ans - docker kill
38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
	
	Ans- mkdir /tmp/mytest
		 docker run --rm -it -v /tmp/mytest:/tmp/mytest ubuntu bash
		 touch /tmp/mytest/index.html
		 cat index.html
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
39. type below command:-
	docker images --help
Now, try to run command that proves the concept of following three options:-
1. -a- docker images -a shows all images
2. -f  docker images -f Filter output based on conditions provided
3. -q  docker images -q Only show numeric IDs

write atleast 1 command using each option above and prove their concepts as described in the --help.


40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a docker ps -a Show all containers (default shows just running)
2. -f docker ps -f Filter output based on conditions provided
3. -q docker ps -q Only display numeric IDs
4. -n docker ps -q Show n last created containers (includes all states)
5. -l docker ps -l Show the latest created container (includes all states)
6. -s docker ps -s Display total file sizes

